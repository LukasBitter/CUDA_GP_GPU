#include "Indice2D.h"
#include "cudaTools.h"

#include <stdio.h>

/*----------------------------------------------------------------------*\
 |*			Declaration 					*|
 \*---------------------------------------------------------------------*/

/*--------------------------------------*\
 |*		Imported	 	*|
 \*-------------------------------------*/

/*--------------------------------------*\
 |*		Public			*|
 \*-------------------------------------*/
__global__ void histogramme(float* ptrDevV1, int n);

/*--------------------------------------*\
 |*		Private			*|
 \*-------------------------------------*/

/*----------------------------------------------------------------------*\
 |*			Implementation 					*|
 \*---------------------------------------------------------------------*/

/*--------------------------------------*\
 |*		Public			*|
 \*-------------------------------------*/

/**
 * output : void required !!
 */
__global__ void addVector(float* ptrDevV1, int n)
    {
    secondaire(ptrDevV1, n); // pas necessaire, just for fun
    }

/*--------------------------------------*\
 |*		Private			*|
 \*-------------------------------------*/

__device__ void secondaire(float* ptrDevV1, float* ptrDevV2, float* ptrDevW, int n)
    {
    const int NB_THREAD = Indice2D::nbThread();
    const int TID = Indice2D::tid();

    // Debug
    if (TID == 0)
	{
	printf("Coucou from device tid%d", TID); //required   Device::synchronize(); after the call of kernel
	}

    //TODO pattern entrelacement

    int s = TID;
    while (s < n)
	{
	ptrDevW[s] = ptrDevV1[s] + ptrDevV2[s];

	s += NB_THREAD;
	}
    }

/*----------------------------------------------------------------------*\
 |*			End	 					*|
 \*---------------------------------------------------------------------*/

