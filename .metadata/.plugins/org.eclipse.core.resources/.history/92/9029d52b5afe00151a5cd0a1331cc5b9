#include "Indice2D.h"
#include "cudaTools.h"
#include "Device.h"
#include "MandelbrotMath.h"

#include "IndiceTools_GPU.h"
using namespace gpu;

/*----------------------------------------------------------------------*\
 |*			Declaration 					*|
 \*---------------------------------------------------------------------*/

/*--------------------------------------*\
 |*		Public			*|
 \*-------------------------------------*/

__global__ void mandelbrot(uchar4* ptrDevPixels, uint w, uint h, float t);

/*--------------------------------------*\
 |*		Private			*|
 \*-------------------------------------*/

/*----------------------------------------------------------------------*\
 |*			Implementation 					*|
 \*---------------------------------------------------------------------*/

/*--------------------------------------*\
 |*		Public			*|
 \*-------------------------------------*/

__global__ void mandelbrot(uchar4* ptrTabPixels, uint w, uint h, float t)
    {
    MandelbrotMath mandelbrotMath = MandelbrotMath(w);

    const int TID = Indice2D::tid();
    const int NB_THREAD = Indice2D::nbThread();
    const int WH = w * h;

    // TODO pattern entrelacement
    uchar4 color;
        int pixelI;	// in [0,h[
        int pixelJ; // in [0,w[

        int s = TID;
        while (s < WH)
    	{
    	IndiceTools::toIJ(s, w, &pixelI, &pixelJ); 	// update (pixelI, pixelJ)

    	workPixel(&ptrTabPixels[s],pixelI,pixelJ,domaineMath,&mandelbrotMath);

    	s += NB_THREAD;
    	}
    }

/*--------------------------------------*\
 |*		Private			*|
 \*-------------------------------------*/

/*----------------------------------------------------------------------*\
 |*			End	 					*|
 \*---------------------------------------------------------------------*/

