#pragma once

#include "cudaTools.h"
#include "curand_kernel.h"

/*----------------------------------------------------------------------*\
 |*			Declaration 					*|
 \*---------------------------------------------------------------------*/

/*--------------------------------------*\
 |*		Public			*|
 \*-------------------------------------*/

class MonteCarlo
    {
	/*--------------------------------------*\
	|*		Constructor		*|
	 \*-------------------------------------*/

    public:

	/**
	 * update w by v1+v2
	 */
	MonteCarlo(float M, int nbFlechettes);

	virtual ~MonteCarlo(void);

	/*--------------------------------------*\
	|*		Methodes		*|
	 \*-------------------------------------*/

    public:

	void run();
	float getPI();


	/*--------------------------------------*\
	|*		Attributs		*|
	 \*-------------------------------------*/

    private:

	// Inputs
	float M; DELETE
	int nbFlechettes;

	// Outputs
	float pi;
	float* tabMontecarlo;

	// Tools
	dim3 dg;
	dim3 db;

	int nbDevice;
	int* ptrDevN0;  // result DELETE

	float** ptrDevTabMontecarlo;
	size_t sizeResult;  // compte le nombre de fléchettes en dessous de la courbe
	size_t sizeOctetTabGenerator; // compte le nombre de générateurs DELETE
	size_t sizeSM;

	curandGenerator_t generator;
	curandRngType_t generatorType = CURAND_RND_PSEUDO_MTGP32;

	curandState** tabDevGeneratorGM; // tableau de tableaux


    };

/*----------------------------------------------------------------------*\
 |*			End	 					*|
 \*---------------------------------------------------------------------*/
