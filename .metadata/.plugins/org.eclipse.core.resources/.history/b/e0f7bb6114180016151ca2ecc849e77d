#include <iostream>
#include <limits.h>
#include <math.h>
//#include "MathTools.h"

//#include "../03_Slice/00_tools/00_pi_tools.h"
//#include "../03_Slice/01_objet/host/PI.h"

using std::cout;
using std::endl;

/*----------------------------------------------------------------------*\
 |*			Declaration 					*|
 \*---------------------------------------------------------------------*/

/*--------------------------------------*\
 |*		Imported	 	*|
 \*-------------------------------------*/

extern bool isPiCUDAforReduction_Ok(int n);

/*--------------------------------------*\
 |*		Public			*|
 \*-------------------------------------*/

bool usePI(void);

/*--------------------------------------*\
 |*		Private			*|
 \*-------------------------------------*/

/*----------------------------------------------------------------------*\
 |*			Implementation 					*|
 \*---------------------------------------------------------------------*/

/*--------------------------------------*\
 |*		Public			*|
 \*-------------------------------------*/

bool usePI(void)
    {
    cout << endl << "[PI]" << endl;

    int n = INT_MAX / 1000;
    bool isOk = true;

    //PI pi(n);
    //pi.run();

    //isOk &= MathTools::isEquals(saucisson.getPi(), M_PI, 1e-3);;
    //isOk &= isPiCUDAforReduction_Ok(n);

    return isOk;
    }

/*--------------------------------------*\
 |*		Private			*|
 \*-------------------------------------*/

/*----------------------------------------------------------------------*\
 |*			End	 					*|
 \*---------------------------------------------------------------------*/

